// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UKMCAB.Subscriptions.Core.Data;

#nullable disable

namespace UKMCAB.Subscriptions.Core.Migrations
{
    [DbContext(typeof(SubscriptionDbContext))]
    [Migration("20250509145147_Subscription_Tables")]
    partial class Subscription_Tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UKMCAB.Subscriptions.Core.Data.Models.SubscriptionEntity", b =>
                {
                    b.Property<string>("TableKey")
                        .HasColumnType("text");

                    b.Property<string>("PartitionKey")
                        .HasColumnType("text");

                    b.Property<string>("RowKey")
                        .HasColumnType("text");

                    b.Property<string>("BlobName")
                        .HasColumnType("text");

                    b.Property<Guid?>("CabId")
                        .HasColumnType("uuid");

                    b.Property<string>("CabName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DueBaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Frequency")
                        .HasColumnType("integer");

                    b.Property<string>("LastThumbprint")
                        .HasColumnType("text");

                    b.Property<string>("SearchKeywords")
                        .HasColumnType("text");

                    b.Property<string>("SearchQueryString")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("TableKey", "PartitionKey", "RowKey");

                    b.ToTable("SubscriptionEntities");
                });

            modelBuilder.Entity("UKMCAB.Subscriptions.Core.Data.Models.TableEntity", b =>
                {
                    b.Property<string>("TableKey")
                        .HasColumnType("text");

                    b.Property<string>("PartitionKey")
                        .HasColumnType("text");

                    b.Property<string>("RowKey")
                        .HasColumnType("text");

                    b.Property<Guid?>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("TableKey", "PartitionKey", "RowKey");

                    b.ToTable("TableEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
