@using UKMCAB.Web.UI.Extensions
@using System.Net
@using UKMCAB.Common.Extensions
@using UKMCAB.Data
@using UKMCAB.Data.Models
@model SearchViewModel

<div id="search-results-list-column" class="govuk-grid-column-two-thirds govuk-body">

    <div class="search-results-pagination-container search-results-pagination-container-top">
        <partial name="Partials/_Pagination" model="Model.Pagination"/>
    </div>

    <div id="search-results-mobile-filters">
        <div id="search-results-filters-link-container">
            <a href="#search-filter-container" id="search-results-filter-toggle" class="govuk-link govuk-link--no-visited-state">Filters (@Model.FilterCount applied)</a>
        </div>
        <div id="search-results-clear-link-container">
            <a id="clear-filters-link" asp-area="Search" asp-controller="Search" asp-action="Index" class="govuk-link govuk-link--no-visited-state">Remove all filters</a>
        </div>
    </div>

    @if (Model.FilterCount > 0)
    {
        var baseFilterPath = Context.Request.RemoveQueryParameters("sort", "pagenumber");
        <div id="search-results-filter-list">
            @foreach (var filterOption in Model.SelectedFilters)
            {
                foreach (var filter in filterOption.Value)
                {
                    var term = $"&{filterOption.Key}={WebUtility.UrlEncode(filter).Replace("%3A", "%3a")}";
                    var filterPath = Model.FilterPath != null ? Model.FilterPath : baseFilterPath.Replace(term, string.Empty);
                    string label = string.Empty;

                    switch (filterOption.Key)
                    {
                        case "Statuses":
                            label = Model.StatusLabel(filter);
                            break;

                        case "SubStatuses":
                            label = Model.SubStatusLabel(filter);
                            break;

                        case "UserGroups":
                            label = filter.ToUpper();
                            break;

                        case "ProvisionalLegislativeAreas":
                            label = Model.ProvisionalLegislativeAreaLabel(filter);
                            break;
                        case "ArchivedLegislativeArea":
                            label = Model.LegislativeAreaStatusLabel(filter);
                            break;
                        case "LAStatus":
                            label = Model.LAStatusLabel(filter);
                            break;

                        default:
                            label = filter;
                            break;
                    }

                    <a href="@filterPath" class="search-result-filter-link">@label&nbsp;&nbsp;x</a>
                }
            }
        </div>
    }
    @if (Model.Pagination.Total > 0)
    {
        var baseSortPath = Context.Request.RemoveQueryParameters("sort", "pagenumber");
        baseSortPath += baseSortPath.Contains("?") ? "&sort=" : "?sort=";
        <div id="search-results-sort-container">
            <fieldset>
                <legend>Sort view <span class="govuk-visually-hidden">@Model.SortDescription</span></legend>
                @foreach (var sortOption in Model.SortOptions)
                {
                    if (string.IsNullOrWhiteSpace(Model.Sort) || Model.Sort.Equals(sortOption.Value, StringComparison.InvariantCultureIgnoreCase))
                    {
                        <label aria-pressed>@sortOption.Label</label>
                    }
                    else
                    {
                        <a 
                            href="@(baseSortPath + sortOption.Value)" 
                            class="govuk-link govuk-link--no-visited-state" 
                            aria-sort="@sortOption.AriaSort" 
                            aria-description="Sort results by @sortOption.Label"
                        >
                            @sortOption.Label
                        </a>
                    }
                }
            </fieldset>
        </div>
        <div id="search-results-list-container" aria-describedby="search-description">
            <p id="search-description" class="govuk-visually-hidden">Results of search of conformity assessment bodies</p>
            <ul id="search-results-list">
                @foreach (var searchResult in Model.SearchResults)
                {
                    <li class="search-result-list-item">
                        @if (Model.InternalSearch && searchResult.Status == Status.Draft.ToString())
                        {
                            <h3 class="govuk-heading-m search-result-list-item-link">
                                <a asp-area="admin" asp-controller="CAB" asp-action="Summary" asp-route-id="@searchResult.CABId" asp-route-returnUrl="@Model.ReturnUrl" class="govuk-link govuk-link--no-visited-state" name="@searchResult.Name">@searchResult.Name</a>
                            </h3>
                            <a asp-area="admin" asp-controller="CAB" asp-action="Summary" asp-route-id="@searchResult.CABId" asp-route-returnUrl="@Model.ReturnUrl" class="search-result-list-item-arrow">
                                <span class="govuk-visually-hidden">More information on @searchResult.Name</span>
                            </a>
                        }
                        else
                        {
                            <h3 class="govuk-heading-m search-result-list-item-link">
                                <a asp-area="search" asp-controller="CABProfile" asp-action="Index" asp-route-id="@searchResult.URLSlug" asp-route-returnUrl="@Model.ReturnUrl" class="govuk-link govuk-link--no-visited-state" name="@searchResult.Name">@searchResult.Name</a>
                            </h3>
                            <a asp-area="search" asp-controller="CABProfile" asp-action="Index" asp-route-id="@searchResult.URLSlug" asp-route-returnUrl="@Model.ReturnUrl" class="search-result-list-item-arrow">
                                <span class="govuk-visually-hidden">More information on @searchResult.Name</span>
                            </a>
                        }
                        <ul class="search-result-list-item-details">
                            @if (Model.InternalSearch)
                            {
                                <li class="search-result-list-item-detail">
                                    <div class="search-result-label">
                                        Status: <span class="search-result-status-label search-result-@searchResult.Status.ToLower() govuk-!-display-inline-block govuk-!-margin-top-1 govuk-!-margin-bottom-1">@searchResult.Status</span>
                                        @if (!string.IsNullOrWhiteSpace(searchResult.SubStatusName) && searchResult.SubStatusName != SubStatus.None.GetEnumDescription())
                                        {
                                            <span class="search-result-status-label govuk-tag--yellow govuk-!-display-inline-block govuk-!-margin-top-2 govuk-!-margin-bottom-2 govuk-!-margin-left-0">@searchResult.SubStatusName</span>
                                        }
                                    </div>
                                    @if (Model.IsOPSSUser && searchResult.Status == Status.Draft.ToString())
                                    {
                                        <div class="search-result-label">
                                            <text>User group: </text><span>@searchResult.UserGroup?.ToUpper()</span>
                                        </div>
                                    }
                                </li>
                            }
                            <li class="search-result-list-item-detail">Address: @(!string.IsNullOrWhiteSpace(searchResult.Address) ? searchResult.Address : @Constants.NotProvided)</li>
                            <li class="search-result-list-item-detail">Body type: @(!string.IsNullOrWhiteSpace(searchResult.BodyType) ? searchResult.BodyType : @Constants.NotProvided)</li>
                            <li class="search-result-list-item-detail">Registered office location: @(!string.IsNullOrWhiteSpace(searchResult.RegisteredOfficeLocation) ? searchResult.RegisteredOfficeLocation : @Constants.NotProvided)</li>
                            <li class="search-result-list-item-detail">Testing location: @(!string.IsNullOrWhiteSpace(searchResult.RegisteredTestLocation) ? searchResult.RegisteredTestLocation : @Constants.NotProvided)</li>
                            <li class="search-result-list-item-detail">Legislative area: @(!string.IsNullOrWhiteSpace(searchResult.LegislativeArea) ? searchResult.LegislativeArea : @Constants.NotProvided)</li>
                        </ul>
                    </li>
                }
            </ul>
        </div>
    }
    else
    {
        <div id="search-no-results-container" aria-describedby="search-description">
            <p id="search-description" class="govuk-visually-hidden">Results of search of conformity assessment bodies returned no results</p>
            <p class="govuk-body">
                <a name="no-results">There are no matching results.</a>
            </p>
            <p class="govuk-body">Please try:</p>
            <ul class="govuk-list govuk-list--bullet">
                <li>removing filters</li>
                <li>double-checking your spelling</li>
                <li>use fewer keywords</li>
                <li>searching for something less specific</li>
            </ul>
        </div>
    }

    <div class="search-results-pagination-container">
        <partial name="Partials/_Pagination" model="Model.Pagination"/>
    </div>

</div>