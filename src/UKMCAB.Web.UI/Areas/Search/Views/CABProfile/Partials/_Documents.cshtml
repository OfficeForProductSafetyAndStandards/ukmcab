@model CABDocumentsViewModel

<div class="govuk-tabs__panel cabs-panel govuk-tabs__panel--hidden" id="@Model.Id">
    <div class="cab-detail-section">
        <h2 class="govuk-heading-l">@Model.Title</h2>
        <p class="govuk-body">Product schedules are the active schedules supplied by UKAS at the time of appointment.</p>
        @if (!Model.Documents.Any())
        { 
            <p class="govuk-body">@Constants.NotProvided</p>
        }
        else
        {
            var isSchedule = Model.Documents.Any(d => !string.IsNullOrWhiteSpace(d.LegislativeArea));

            var activeGroupedSchedules = Model.Documents.Where(d => d.Archived == null || !d.Archived.Value).OrderBy(s => isSchedule ? s.LegislativeArea : s.Category).ThenBy(s => s.Label).GroupBy(s => isSchedule ? s.LegislativeArea : s.Category);
            var archivedGroupedSchedules = Model.Documents.Where(d => d.Archived.HasValue && d.Archived.Value).OrderBy(s => isSchedule ? s.LegislativeArea : s.Category).ThenBy(s => s.Label).GroupBy(s => isSchedule ? s.LegislativeArea : s.Category);

            <partial name="Partials/_DocumentsTable" model="@(new CABDocumentsTableViewModel { CABId = Model.CABId, DocumentType = Model.DocumentType, GroupedDocuments = activeGroupedSchedules })" />

            @if(isSchedule && archivedGroupedSchedules.Any())
            {
                <hr class="govuk-!-margin-top-9" />
                <h2 class="govuk-heading-l">Archived @(@Model.Title.ToLower())</h2>

                <partial name="Partials/_DocumentsTable" model="@(new CABDocumentsTableViewModel { CABId = Model.CABId, DocumentType = Model.DocumentType, GroupedDocuments = archivedGroupedSchedules })" />
            }
        }
    </div>
</div>