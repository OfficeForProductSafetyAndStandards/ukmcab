@using UKMCAB.Data.Models
@model UKMCAB.Web.UI.Models.ViewModels.Admin.CABBodyDetailsViewModel
@section BackButton
{
<div class="govuk-width-container ">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            @if (Model.IsFromSummary)
            {
                <a asp-area="Admin" asp-controller="CAB" asp-action="Summary" asp-route-id="@Model.CABId" class="govuk-back-link">Back</a>
            }
            else
            {
                <a asp-area="Admin" asp-controller="CAB" asp-action="Contact" asp-route-id="@Model.CABId" class="govuk-back-link">Back</a>
            }
        </div>
    </div>
</div>
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <partial name="Partials/_ValidationSummary" model="Model.FieldOrder" />
    </div>
</div>
<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <span class="govuk-caption-m">Create a CAB</span>
        <h1 class="govuk-heading-l">Body details</h1>
    </div>
</div>
<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <form id="cab-body-details-form" method="post">
            <input type="hidden" asp-for="IsFromSummary"/>
            <fieldset class="govuk-fieldset">
                <div class="govuk-form-group @Html.ShowModelStateFormGroupErrorClass(ViewData.ModelState, nameof(Model.TestingLocations))">
                    <h1 class="govuk-label-wrapper">
                        <label class="govuk-heading-s" for="TestingLocations1" id="TestingLocations">
                            Registered test location
                        </label>
                    </h1>
                    <p class="govuk-error-message">
                        <span asp-validation-for="TestingLocations" class="govuk-error-message"></span>
                    </p>

                    <div id="test-locations-container">
                        @foreach (var testingLocation in Model.TestingLocations)
                        {
                            <div class="test-location">
                                <select class="govuk-select govuk-!-width-two-thirds @Html.ShowModelStateInputErrorClass(ViewData.ModelState, nameof(Model.TestingLocations))" name="TestingLocations"
                                        asp-items="@Constants.Lists.Countries.Select(s => new SelectListItem(s, s, s.Equals(testingLocation)))">
                                    <option value="">Choose location</option>
                                </select>
                                <a href="#" class="test-location-remove-link govuk-link govuk-link--no-visited-state govuk-visually-hidden">Remove</a>
                            </div>
                        }
                    </div>

                </div>
                <div id="add-test-location-button-container">
                    <a id="add-test-location-button" href="#" class="govuk-link govuk-link--no-visited-state">Add another registered test location</a>
                </div>
                <div class="govuk-form-group @Html.ShowModelStateFormGroupErrorClass(ViewData.ModelState,"BodyTypes")">
                    <fieldset class="govuk-fieldset" aria-describedby="body-types-hint">
                        <h1 class="govuk-label-wrapper">
                            <label class=" govuk-heading-s" asp-for="BodyTypes" id="BodyTypes">
                                Body type
                            </label>
                        </h1>
                        <div id="body-types-hint" class="govuk-hint">
                            Select all that apply
                        </div>
                        <p class="govuk-error-message">
                            <span asp-validation-for="BodyTypes" class="govuk-error-message"></span>
                        </p>
                        <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                            @foreach (var bodyType in Constants.Lists.BodyTypes)
                            {
                                <div class="govuk-checkboxes__item">
                                    <input class="govuk-checkboxes__input" id="@bodyType" name="BodyTypes" type="checkbox" value="@bodyType" checked="@(Model?.BodyTypes!= null && Model.BodyTypes.Any(bt => bt.Equals(bodyType, StringComparison.InvariantCultureIgnoreCase)))">
                                    <label class="govuk-label govuk-checkboxes__label" for="@bodyType">
                                        @bodyType
                                    </label>
                                </div>
                            }
                        </div>
                    </fieldset>
                </div>

                <div class="govuk-form-group @Html.ShowModelStateFormGroupErrorClass(ViewData.ModelState, "LegislativeAreas")">
                    <fieldset class="govuk-fieldset" aria-describedby="legislative-area-hint">
                        <h1 class="govuk-label-wrapper">
                            <label class=" govuk-heading-s" asp-for="LegislativeAreas" id="LegislativeAreas">
                                Legislative area
                            </label>
                        </h1>
                        <div id="legislative-area-hint" class="govuk-hint">
                            Select all that apply
                        </div>
                        <p class="govuk-error-message">
                            <span asp-validation-for="LegislativeAreas" class="govuk-error-message"></span>
                        </p>
                        <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                            @foreach (var legislativeArea in Constants.Lists.LegislativeAreas)
                            {
                                <div class="govuk-checkboxes__item">
                                    <input class="govuk-checkboxes__input" id="@legislativeArea" name="LegislativeAreas" type="checkbox" value="@legislativeArea" checked="@(Model?.LegislativeAreas != null && Model.LegislativeAreas.Any(la => la.Equals(legislativeArea, StringComparison.InvariantCultureIgnoreCase)))">
                                    <label class="govuk-label govuk-checkboxes__label" for="@legislativeArea">
                                        @legislativeArea
                                    </label>
                                </div>
                            }
                        </div>
                    </fieldset>
                </div>
                
                <div class="govuk-button-group">
                    <button class="govuk-button" data-module="govuk-button" name="submitType" value="@Constants.SubmitType.Continue">
                        Continue
                    </button>
                    <button class="govuk-button govuk-button--secondary" data-module="govuk-button" name="submitType" value="@Constants.SubmitType.Save">
                        Save as draft
                    </button>
                    @if (Model.IsFromSummary && Model.DocumentStatus != Status.Created)
                    {
                        <a asp-area="admin" asp-controller="CAB" asp-action="Summary" asp-route-id="@Model.CABId" class="govuk-link govuk-link--no-visited-state">Cancel</a>
                    }
                    else
                    {
                        <a asp-area="admin" asp-controller="CAB" asp-action="Cancel" asp-route-id="@Model.CABId" class="govuk-link govuk-link--no-visited-state">Cancel</a>
                    }
                </div>

            </fieldset>
        </form>
    </div>
</div>
