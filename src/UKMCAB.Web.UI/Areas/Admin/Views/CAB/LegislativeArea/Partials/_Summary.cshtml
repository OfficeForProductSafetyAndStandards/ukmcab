@using Ganss.Xss;
@model UKMCAB.Web.UI.Models.ViewModels.Admin.CAB.CABLegislativeAreasItemViewModel
@{
    var htmlSanitizer = new HtmlSanitizer();
    htmlSanitizer.AllowedTags.Clear();
    var showProcedureHeaderForPpeData = (Model.ShowPpeProductTypeColumn
                                || Model.ShowProtectionAgainstRiskColumn
                                || Model.ShowAreaOfCompetencyColumn);
}
<div class="govuk-!-padding-top-1">

    <div class="cab-summary-detail legislative-area-summary-list">
        <dl class="govuk-summary-list">
            <div class="govuk-summary-list__row  govuk-!-padding-top-5">
                <dt class="govuk-summary-list__key">
                    Provisional
                </dt>
                <dd class="govuk-summary-list__value">
                    @Model.IsProvisional.AsYesNoOrNotProvided()
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Appointment date (optional)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Html.ValueOrNotProvided(Model.AppointmentDate.ToStringBeisDateFormat())
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Review date (optional)
                </dt>
                <dd class="govuk-summary-list__value">
                    @Html.ValueOrNotProvided(Model.ReviewDate.ToStringBeisDateFormat())
                </dd>
            </div>
            @if (!string.IsNullOrEmpty(Model.PointOfContactName))
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Legislative area contact name (optional)
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Model.PointOfContactName
                    </dd>
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.PointOfContactEmail))
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Legislative area contact email (optional)
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Model.PointOfContactEmail
                    </dd>
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.PointOfContactPhone))
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Legislative area contact telephone (optional)
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Model.PointOfContactPhone
                    </dd>
                </div>
            }
            @if (Model.IsPointOfContactPublicDisplay.HasValue)
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Display legislative area contact details
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @(Model.IsPointOfContactPublicDisplay.Value ? "Public" : "Restricted")
                    </dd>
                </div>
            }
        </dl>
    </div>

    @{
        var scopeOfAppointmentsWithDesignatedStandards = Model.ScopeOfAppointments.Where(soa => soa.DesignatedStandards?.Any() ?? false);
    }
    @if (scopeOfAppointmentsWithDesignatedStandards.Any())
    {
        <table class="govuk-table govuk-!-margin-top-3">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header govuk-!-width-one-third">Designated standard</th>
                    <th scope="col" class="govuk-table__header govuk-!-width-half">Reference number</th>
                    <th scope="col" class="govuk-table__header govuk-!-width-one-fifth">Publication reference</th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @foreach (var scopeOfAppointment in scopeOfAppointmentsWithDesignatedStandards)
                {
                    @foreach (var designatedStandard in scopeOfAppointment.DesignatedStandards!)
                    {
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell">@designatedStandard.Name</td>
                            <td class="govuk-table__cell">
                                <ul class="govuk-list govuk-list--spaced">
                                    @foreach (var referenceNumber in @designatedStandard.ReferenceNumber)
                                    {
                                        <li>@referenceNumber</li>
                                    }
                                </ul>
                            </td>
                            <td class="govuk-table__cell">@designatedStandard.NoticeOfPublicationReference</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }

    @if (Model.CanChooseScopeOfAppointment)
    {
        <table class="govuk-table ukmcab-table govuk-!-margin-top-3 govuk-!-margin-bottom-0">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    @if (Model.ShowPurposeOfAppointmentColumn)
                    {
                        <th scope="col" class="govuk-table__header">Purpose of appointment</th>
                    }
                    @if (Model.ShowCategoryColumn)
                    {
                        <th scope="col" class="govuk-table__header">Product category</th>
                    }
                    @if (Model.ShowProductColumn)
                    {
                        <th scope="col" class="govuk-table__header">Product</th>
                    }

                    @if (!showProcedureHeaderForPpeData && Model.ScopeOfAppointments.Any())
                    {
                        <th scope="col" class="govuk-table__header">Applicable conformity assessment procedure</th>
                    }
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @if (!Model.ScopeOfAppointments.Any())
                {
                    <tr>
                        <td>No scope of appointments</td>
                    </tr>
                }

                @for (int j = 0; j < Model.ScopeOfAppointments.Count; j++)
                {
                    var scopeOfAppointment = Model.ScopeOfAppointments[j];
                    var noOfProductsInScopeOfAppointment = scopeOfAppointment.NoOfProductsInScopeOfAppointment;
                    var nextProductIndex = j;
                    var currentPpeCategory = string.Empty;
                    @for (int k = 0; k < noOfProductsInScopeOfAppointment; k++)
                    {
                        var showBorder = k == noOfProductsInScopeOfAppointment - 1;

                        @if (!string.IsNullOrEmpty(scopeOfAppointment.PpeProductType) && !currentPpeCategory.Equals("PpeProductType"))
                        {
                            currentPpeCategory = "PpeProductType";
                            <tr class="govuk-table__row">
                                <th scope="col" class="govuk-table__header">PPE product type</th>
                                <th scope="col" class="govuk-table__header">Applicable conformity assessment procedure</th>
                            </tr>
                        }
                        else if (!string.IsNullOrEmpty(scopeOfAppointment.ProtectionAgainstRisk) && !currentPpeCategory.Equals("ProtectionAgainstRisk"))
                        {
                            currentPpeCategory = "ProtectionAgainstRisk";
                            <tr class="govuk-table__row">
                                <th scope="col" class="govuk-table__header">Protection against risk</th>
                                <th scope="col" class="govuk-table__header">Applicable conformity assessment procedure</th>
                            </tr>
                        }
                        else if (!string.IsNullOrEmpty(scopeOfAppointment.AreaOfCompetency) && !currentPpeCategory.Equals("AreaOfCompetency"))
                        {
                            currentPpeCategory = "AreaOfCompetency";
                            <tr class="govuk-table__row">
                                <th scope="col" class="govuk-table__header">Area of competency</th>
                                <th scope="col" class="govuk-table__header">Applicable conformity assessment procedure</th>
                            </tr>
                        }

                        <tr class="govuk-table__row">
                            @if (k == 0)
                            {
                                @if (Model.ShowPurposeOfAppointmentColumn)
                                {
                                    <td class="govuk-table__cell @Html.Conditional(!showBorder, "ukmcab-no-border")">
                                        <label aria-hidden="true">Purpose of appointment</label>
                                        @scopeOfAppointment.PurposeOfAppointment
                                    </td>
                                }

                            }
                            else
                            {
                                @if (Model.ShowPurposeOfAppointmentColumn)
                                {
                                    <td class="govuk-table__cell @Html.Conditional(!showBorder, "ukmcab-no-border")">
                                    </td>
                                }                               
                            }

                            @if (Model.ShowCategoryColumn)
                            {
                                @if (string.IsNullOrEmpty(scopeOfAppointment.Product))
                                {
                                    <td class="govuk-table__cell @Html.Conditional(!showBorder, "ukmcab-no-border")">
                                        <label aria-hidden="true">Product category</label>
                                        @scopeOfAppointment.Category
                                        @if (!string.IsNullOrEmpty(scopeOfAppointment.SubCategory))
                                        {
                                            <div class="govuk-!-margin-top-3">Product sub-category</div>
                                            <div>@scopeOfAppointment.SubCategory</div>
                                        }
                                    </td>
                                }
                                else
                                {
                                    @if (k == 0)
                                    {
                                        <td class="govuk-table__cell @Html.Conditional(!showBorder, "ukmcab-no-border")">
                                            <label aria-hidden="true">Product category</label>
                                            @scopeOfAppointment.Category
                                            @if (!string.IsNullOrEmpty(scopeOfAppointment.SubCategory))
                                            {
                                                <div class="govuk-!-margin-top-3">Product sub-category</div>
                                                <div>@scopeOfAppointment.SubCategory</div>
                                            }
                                        </td>
                                    }
                                    else
                                    {
                                        @if (Model.ShowCategoryColumn)
                                        {
                                            <td class="govuk-table__cell @Html.Conditional(!showBorder, "ukmcab-no-border")">
                                            </td>
                                        }
                                    }
                                }
                            }

                            @if (Model.ShowProductColumn)
                            {
                                <td class="govuk-table__cell @Html.Conditional(!showBorder, "ukmcab-no-border")">
                                    <label aria-hidden="true">Product</label>
                                    @Html.ValueOrNotApplicable(scopeOfAppointment.Product)
                                </td>
                            }

                            @* PPE Start*@
                            @**@ @if (scopeOfAppointment.PpeProductType != null)                            {
                                
                                <td class="govuk-table__cell @Html.Conditional(!showBorder, "ukmcab-no-border")">
                                    <label aria-hidden="true">PPE product type</label>
                                    @(scopeOfAppointment.PpeProductType != null ? scopeOfAppointment.PpeProductType : string.Empty)
                                </td>
                            }

                            @**@ @if (scopeOfAppointment.ProtectionAgainstRisk != null)
                            {
                                <td class="govuk-table__cell @Html.Conditional(!showBorder, "ukmcab-no-border")">
                                    <label aria-hidden="true">Protection against risk</label>
                                    @Html.ValueOrNotApplicable(scopeOfAppointment.ProtectionAgainstRisk)
                                </td>
                            }

                            @**@ @if (scopeOfAppointment.AreaOfCompetency != null)
                            {
                                <td class="govuk-table__cell @Html.Conditional(!showBorder, "ukmcab-no-border")">
                                    <label aria-hidden="true">Area of competency</label>
                                    @Html.ValueOrNotApplicable(scopeOfAppointment.AreaOfCompetency)
                                </td>
                            }
                            @* PPE End*@

                            @* Procedures *@
                            <td class="govuk-table__cell @Html.Conditional(!showBorder, "ukmcab-no-border")">
                                <label aria-hidden="true">Applicable conformity assessment procedure</label>
                                @if (scopeOfAppointment.Procedures != null)
                                {
                                    @foreach (var procedure in scopeOfAppointment.Procedures)
                                    {
                                        <p class="govuk-!-margin-bottom-4">@procedure</p>
                                    }
                                }
                                else
                                {
                                    <span>Not provided</span>
                                }
                            </td>
                        </tr>

                        if ((nextProductIndex + 1) < (j + noOfProductsInScopeOfAppointment))
                        {
                            nextProductIndex += 1;
                            scopeOfAppointment = Model.ScopeOfAppointments[nextProductIndex];
                        }
                        else
                        {
                            j = nextProductIndex;
                        }
                    }


                }
            </tbody>
        </table>
    }
</div>