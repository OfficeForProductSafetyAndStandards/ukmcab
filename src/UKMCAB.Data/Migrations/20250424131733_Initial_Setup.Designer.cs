// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UKMCAB.Data.PostgreSQL;

#nullable disable

namespace UKMCAB.Data.Migrations
{
    [DbContext(typeof(ApplicationDataContext))]
    [Migration("20250424131733_Initial_Setup")]
    partial class Initial_Setup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UKMCAB.Data.Models.CABDocumentBlob", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("CABId")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("CABNumber")
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("CabBlob")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("CreatedByUserGroup")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("StatusValue")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("SubStatus")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("UKASReference")
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("URLSlug")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.HasKey("id");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("UKMCAB.Data.Models.LegislativeAreas.AreaOfCompetency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.PrimitiveCollection<List<Guid>>("ProtectionAgainstRiskIds")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.HasKey("Id");

                    b.ToTable("AreaOfCompetencies");
                });

            modelBuilder.Entity("UKMCAB.Data.Models.LegislativeAreas.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LegislativeAreaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.Property<Guid?>("PurposeOfAppointmentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("UKMCAB.Data.Models.LegislativeAreas.DesignatedStandard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("LegislativeAreaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("NoticeOfPublicationReference")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Regulation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DesignatedStandards");
                });

            modelBuilder.Entity("UKMCAB.Data.Models.LegislativeAreas.LegislativeArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("HasDataModel")
                        .HasColumnType("bool");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("Regulation")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.HasKey("Id");

                    b.ToTable("LegislativeAreas");
                });

            modelBuilder.Entity("UKMCAB.Data.Models.LegislativeAreas.PpeCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("LegislativeAreaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.HasKey("Id");

                    b.ToTable("PpeCategories");
                });

            modelBuilder.Entity("UKMCAB.Data.Models.LegislativeAreas.PpeProductType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("LegislativeAreaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.Property<Guid>("PpeCategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("PpeProductTypes");
                });

            modelBuilder.Entity("UKMCAB.Data.Models.LegislativeAreas.Procedure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.PrimitiveCollection<List<Guid>>("AreaOfCompetencyIds")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.PrimitiveCollection<List<Guid>>("CategoryIds")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.Property<Guid>("LegislativeAreaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.PrimitiveCollection<List<Guid>>("PpeProductTypeIds")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.PrimitiveCollection<List<Guid>>("ProductIds")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.PrimitiveCollection<List<Guid>>("ProtectionAgainstRiskIds")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.PrimitiveCollection<List<Guid>>("PurposeOfAppointmentIds")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.HasKey("Id");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("UKMCAB.Data.Models.LegislativeAreas.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LegislativeAreaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.Property<Guid?>("PurposeOfAppointmentId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("SubCategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("UKMCAB.Data.Models.LegislativeAreas.ProtectionAgainstRisk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.PrimitiveCollection<List<Guid>>("PpeProductTypeIds")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.HasKey("Id");

                    b.ToTable("ProtectionAgainstRisks");
                });

            modelBuilder.Entity("UKMCAB.Data.Models.LegislativeAreas.PurposeOfAppointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("LegislativeAreaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.HasKey("Id");

                    b.ToTable("PurposeOfAppointments");
                });

            modelBuilder.Entity("UKMCAB.Data.Models.LegislativeAreas.SubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(1024)");

                    b.HasKey("Id");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("UKMCAB.Data.Models.Users.UserAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("AuditLog")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("ContactEmailAddress")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("timestamptz");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bool");

                    b.Property<DateTime?>("LastLogonUtc")
                        .HasColumnType("timestamptz");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamptz");

                    b.Property<string>("LockInternalNotes")
                        .HasColumnType("text");

                    b.Property<string>("LockReason")
                        .HasColumnType("text");

                    b.Property<string>("LockReasonDescription")
                        .HasColumnType("text");

                    b.Property<string>("OrganisationName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<string>("SurnameNormalized")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("UKMCAB.Data.Models.Users.UserAccountRequest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("AuditLog")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<string>("ContactEmailAddress")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("timestamptz");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamptz");

                    b.Property<string>("OrganisationName")
                        .HasColumnType("text");

                    b.Property<string>("ReviewComments")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserAccountRequests");
                });

            modelBuilder.Entity("UKMCAB.Data.Models.Workflow.WorkflowTask", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(1024)");

                    b.Property<bool?>("Approved")
                        .HasColumnType("bool");

                    b.Property<DateTime?>("Assigned")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Assignee")
                        .HasColumnType("jsonb");

                    b.Property<Guid?>("CabId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Completed")
                        .HasColumnType("bool");

                    b.Property<string>("DeclineReason")
                        .HasColumnType("text");

                    b.Property<Guid?>("DocumentLAId")
                        .HasColumnType("uuid");

                    b.Property<string>("ForRoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("SentOn")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Submitter")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("TaskType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("WorkflowTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
